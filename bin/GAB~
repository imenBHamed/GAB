#!/usr/bin/env ruby
require 'gli'
begin # XXX: Remove this begin/rescue before distributing your app
require 'GAB'
rescue LoadError
  STDERR.puts "In development, you need to use `bundle exec bin/GAB` to run your app"
  STDERR.puts "At install-time, RubyGems will make sure lib, etc. are in the load path"
  STDERR.puts "Feel free to remove this message from bin/GAB now"
  exit 64
end

include GLI::App

program_desc 'Simulation d'' guichet automatique de banque. Cette application aide le client à gérer son compte bancaire en effectuant des dépots ou des retraits d''argent ainsi que la modification des paramêtres de son compte. Quant à l''administrateur, celui-ci sera capable de créer et de supprimer les comptes des clients.'

version GAB::VERSION

subcommand_option_handling :normal
arguments :strict

desc 'creation d''un compte bancaire'
switch [:s,:switch]

desc 'Exécution en ajoutant les données dans le fichier'
default_value 'the default'
arg_name 'data!'
flag [:f,:flagname]

desc 'ajout d''un compte utilisateur de la part de l''administrateur seulement'
arg_name 'nomClient identifiantClient pwdClient identifiantAdmin pwdAmin'
command :creerCompte do |c|
  c.desc 'Describe a switch to CreerCompte'
  c.switch :s

  c.desc 'Describe a flag to CreerCompte'
  c.default_value 'default'
  c.flag :f
  c.action do |global_options,options,args|

    # Your command logic here
     
    # If you have any errors, just raise them
    # raise "that command made no sense"
      nomClient= args.shift
      identifiantClient= args.shift
      pwdClient= args.shift
      identifiantAdmin= args.shift
      pwdAmin= args.shift
    puts "votre compte a été enregistré avec succèe dans la base de donnees"
   
  end
end

desc 'Supprimer un compte d''un utilisateur, seul l''adminisrtateur peut le faire'
arg_name 'identifiantCompte identifiantAdmin pwdAmin'
command :supprimerCompte do |c|
  c.action do |global_options,options,args|
   
      identifiantClient= args.shift
      identifiantAdmin= args.shift
      pwdAmin= args.shift
    puts "votre compte a été supprimé!"
  end
end

desc 'La supression definitive garantie une supression de tous les bases de donnees, cette commande est realisee par l''administrateur '
arg_name 'identifiantClient identifiantAdmin pwdAmin'
command :supprimerCompteDefinitive do |c|
  c.action do |global_options,options,args|
     identifiantClient= args.shift
      identifiantAdmin= args.shift
      pwdAmin= args.shift
    puts "votre compte a été supprimé définitivement"
  end
end

desc 'Le client peut modifier les paramètres de son compte'
arg_name 'identifiantClient pwdClient'
command :modifierCompte do |c|
  c.action do |global_options,options,args|
      identifiantClient= args.shift
      pwdClient= args.shift
    puts "Vous avez modifié votre compte!"
  end
end

desc 'Le client peut consulter son compte pour connaitre sa balance'
arg_name 'identifiantClient pwdClient'
command :consulterCompte do |c|
  c.action do |global_options,options,args|
      identifiantClient= args.shift
      pwdClient= args.shift
    puts "Votre balance est de : montant"
  end
end

desc 'Le client ajoute une somme d''argent à son compte'
arg_name 'identifiantClient pwdClient montant'
command :deposerArgent do |c|
  c.action do |global_options,options,args|
    puts "DeposerArgent command ran"
  end
end

desc 'Lorsque le client retire une somme d''argent, le montant dans son compte diminue de cette somme'
arg_name 'identifiantClient pwdClient montant'
command :retirerArgent do |c|
  c.action do |global_options,options,args|
    puts "RetirerArgent command ran"
  end
end

pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit run(ARGV)
